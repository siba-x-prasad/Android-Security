The build process for a typical Android app module, as shown in figure 1, follows these general steps:

1. The compilers convert your source code into DEX (Dalvik Executable) files, which include the bytecode that runs on
Android devices, and everything else into compiled resources.

2. The APK Packager combines the DEX files and compiled resources into a single APK. Before your app can be installed
 and deployed onto an Android device, however, the APK must be signed.

3. The APK Packager signs your APK using either the debug or release keystore:

    a. If you are building a debug version of your app, that is, an app you intend only for testing and profiling,
    the packager signs your app with the debug keystore. Android Studio automatically configures new projects with a
    debug keystore.

    b. If you are building a release version of your app that you intend to release externally, the packager signs
    your app with the release keystore. To create a release keystore, read about signing your app in Android Studio.

Before generating your final APK, the packager uses the zipalign tool to optimize your app to use less memory when
running on a device.
At the end of the build process, you have either a debug APK or release APK of your app that you can use to deploy,
test, or release to external users.